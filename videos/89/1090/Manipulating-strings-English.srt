<b>Narration</b>

1
00:00:01 --> 00:00:05
Welcome to the spoken tutorial on <b>Manipulating</b> <b>Strings</b>.

2
00:00:06 --> 00:00:26
In this tutorial, we will learn to
<p>Slice a <b>string</b> and get <b>substrings</b> out of them
</p><p>Reverse a <b>string</b>
</p><p>Replace characters in a <b>string</b>
</p><p>Convert a <b>string</b> to upper or lowercase and
</p><p>Join <b>list</b> <b>elements</b> to form a <b>string</b>
</p>

3
00:00:27 --> 00:00:42
To record this tutorial, I am using
<p><b>Ubuntu Linux 16.04</b> operating system
</p><p><b>Python 3.4.3</b> and
</p><p><b>IPython 5.1.0</b>
</p>

4
00:00:43 --> 00:00:58
To practise this tutorial, you should know how to use
<p><b>basic datatypes, operators, strings </b>and <b>lists</b>
</p><p>If not, see the relevant <b>Python</b> tutorials on this website.
</p>

5
00:00:59 --> 00:01:02
First let us see about <b>string slicing</b>.

6
00:01:03 --> 00:01:07
<b>String slicing </b>allows us to obtain <b>substrings</b>.

7
00:01:08 --> 00:01:23
The syntax for the string slicing is:
<p><b>string_name </b><i>inside square brackets </i><b>start </b><i>colon</i><b> stop </b>or
</p><p><b>string_name </b><i>inside square brackets </i><b>start </b><i>colon </i><b>stop </b><i>colon </i><b>step</b>
</p>

8
00:01:24 --> 00:01:28
Let us start <b>ipython</b>. Open the <b>terminal.</b>

9
00:01:29 --> 00:01:39
Type <b>ipython3 </b>and press <b>Enter.</b> From here onwards, remember to press the <b>Enter</b> key after typing every command on the <b>terminal</b>.

10
00:01:40 --> 00:01:50
Let us understand the <b>string slicing</b> with an example. Type, <b>data </b><i>is equal to inside double quotes</i><b> python</b>

11
00:01:51 --> 00:01:58
Type, <b>print </b><i>inside brackets </i><b>data </b><i>inside square brackets </i><b>0 </b><i>colon </i><b>3</b>

12
00:01:59 --> 00:02:02
We get the <b>sliced substring</b> as <b>pyt.</b>

13
00:02:03 --> 00:02:08
Note that, we are <b>slicing</b> the <b>string</b> from the <b>index</b> 0 to 3.

14
00:02:09 --> 00:02:14
By doing so, the string elements from index 3 are not included.

15
00:02:15 --> 00:02:20
Let us create a <b>list, week</b><i> underscore </i><b>name </b>which has names of the days of the week.

16
00:02:21 --> 00:02:30
Type as shown. Type, <b>s </b><i>is equal to inside double quotes</i><b> saturday</b>

17
00:02:31 --> 00:02:38
We need to check if the first three characters of the given <b>string</b> exists in the list<b> week</b><i> underscore </i><b>name</b>.

18
00:02:39 --> 00:02:42
<b>Strings</b> can be <b>sliced</b> into <b>substrings</b>.

19
00:02:43 --> 00:02:51
To get the first three characters of the string <b>s</b>, type, <b>s </b><i>inside square brackets </i><b>0 </b><i>colon </i><b>3</b>

20
00:02:52 --> 00:02:59
As you can see, the character at last index ie <b>3</b> is not included in the sliced output.

21
00:03:00 --> 00:03:05
We will check if the <b>substring </b>of<b> s </b>is present in the <b>list</b> <b>week</b><i> underscore </i><b>name.</b>

22
00:03:06 --> 00:03:13
Type <b>s </b><i>inside square brackets </i><b>0 </b><i>colon </i><b>3 in week</b><i> underscore </i><b>name</b>

23
00:03:14 --> 00:03:19
We get the output as <b>True</b> which indicates that the substring is present in the list.

24
00:03:20 --> 00:03:25
Pause the video. Try this exercise and then resume the video.

25
00:03:26 --> 00:03:31
Obtain the <b>substring</b> excluding the first and last characters from the <b>string</b> <b>s</b>.

26
00:03:32 --> 00:03:35
Switch back to <b>terminal</b> for the solution.

27
00:03:36 --> 00:03:41
Type, <b>s </b><i>inside square brackets </i><b>1 </b><i>colon </i><b>-1</b>

28
00:03:42 --> 00:03:48
As we already know, the last element of the <b>string</b> can be accessed using the index<b> -1</b>.
<p><br/>
</p>

29
00:03:49 --> 00:03:54
Next let us learn to check if a given <b>string</b> is a <b>palindrome</b> or not.

30
00:03:55 --> 00:04:00
A <b>palindromic string</b> is a <b>string</b> that is same as its reverse.

31
00:04:01 --> 00:04:06
Type, <b>s1 </b><i>is equal to inside double quotes</i><b> dad</b>

32
00:04:07 --> 00:04:10
Now, we need to compare this <b>string</b> with its reverse.

33
00:04:11 --> 00:04:16
For reversing <b>s1</b>, we <b>stride</b> the <b>string</b> from the first to last <b>character.</b>

34
00:04:17 --> 00:04:23
It is done<b> </b>by keeping the <b>start</b> and <b>stop</b> values as empty and <b>step</b> as -1.

35
00:04:24 --> 00:04:29
That is <b>s1 </b><i>inside square brackets colon colon</i><b> -1</b>

36
00:04:30 --> 00:04:34
Now, we will check if the string <b>s1</b> is a <b>palindrome</b> or not.

37
00:04:35 --> 00:04:43
Type, <b>s1</b><i> is double equal to</i><b> s1 </b><i>inside square brackets colon colon </i><b>-1</b>

38
00:04:44 --> 00:04:48
The output <b>True </b>indicates that it is a <b>palindrome</b>.

39
00:04:49 --> 00:04:56
If the given <b>string</b> has capital <b>D </b>in<b> dad</b> instead of small <b>d</b>, the comparison would return <b>False</b>.

40
00:04:57 --> 00:05:03
So, we have to convert the <b>string</b> to all <b>lowercase</b> or <b>uppercase</b>, before comparison.

41
00:05:04 --> 00:05:09
<b>Python</b> provides the <b>string</b> <b>methods</b> <b>lower</b> and <b>upper</b> to achieve this.

42
00:05:10 --> 00:05:18
Let's try it out. Type, <b>s2 </b><i>is equal to inside double quotes</i><b> </b>capital<b> D ad</b>

43
00:05:19 --> 00:05:28
Type <b>s2.upper </b>open and close parentheses We get all the <b>characters</b> in <b>uppercase</b>.

44
00:05:29 --> 00:05:35
Type <b>s2</b> As you can see, <b>s2</b> has not changed.

45
00:05:36 --> 00:05:42
It is because, <b>method upper</b> returns a new <b>string</b>. It doesn't change the original <b>string</b>.

46
00:05:43 --> 00:05:55
Let us compare the original and reversed <b>string</b> in <b>lowercase.</b>
<p>Type as shown. As expected the output is <b>True</b>.
</p>

47
00:05:56 --> 00:06:01
Pause the video. Try this exercise and then resume the video.

48
00:06:02 --> 00:06:08
Check if each <b>element</b> in the following <b>list </b>is present in the <b>list</b> <b>week</b><i> underscore </i><b>name</b>.

49
00:06:09 --> 00:06:12
Switch back to <b>terminal</b> for the solution.

50
00:06:13 --> 00:06:23
Type as shown. It returns <b>False</b> for <b>python </b>as it is not there in the <b>list week</b><i> underscore </i><b>name.</b>

51
00:06:24 --> 00:06:27
Next let us learn to use <b>replace method</b>.

52
00:06:28 --> 00:06:35
Type, <b>email </b><i>is equal to inside double quotes </i><b>info[at]fossee[dot]in</b>

53
00:06:36 --> 00:06:43
We often encounter <b>email addresses</b> which have <b>@</b> <b>symbol </b>and <b>periods</b> replaced with text as shown.

54
00:06:44 --> 00:06:48
Let us learn how to get back proper <b>email</b> <b>addresses</b>.

55
00:06:49 --> 00:06:54
Now, we will first replace the <b>[at]</b> with the <b>@ symbol</b>, using the <b>replace method</b>.

56
00:06:55 --> 00:07:04
Type as shown. You can see that the <b>@ symbol </b>is properly replaced now.

57
00:07:05 --> 00:07:10
Pause the video. Try this exercise and then resume the video.

58
00:07:11 --> 00:07:15
Replace the <b>[dot] </b>with '<b>.'</b> symbol in the given <b>email.</b>

59
00:07:16 --> 00:07:19
Switch back to <b>terminal</b> for the solution.

60
00:07:20 --> 00:07:23
Type as shown.

61
00:07:24 --> 00:07:29
Now the variable <b>email</b><i> underscore </i><b>proper</b> has the <b>email </b>in the proper form.

62
00:07:30 --> 00:07:33
Next, we will look at another interesting problem.

63
00:07:34 --> 00:07:40
Let us say, we have a list of <b>email addresses</b> in the variable <b>email</b><i> underscore </i><b>list</b> as shown.

64
00:07:41 --> 00:07:47
We will obtain one long <b>string</b> of <b>email addresses,</b> separated by <b>commas</b> or <b>semicolons</b>.

65
00:07:48 --> 00:07:54
We will use the <b>string method join </b>for joining the <b>list items </b>into a single <b>string.</b>

66
00:07:55 --> 00:08:03
Type as shown. <b>Comma</b> followed by a <b>space</b> will give the <b>string</b> with the same <b>formatting</b>.

67
00:08:04 --> 00:08:15
Type, <b>print </b><i>inside parentheses</i><b> email</b><i> underscore </i><b>str</b> You can see that all the email addresses joined into a single <b>string</b>.

68
00:08:16 --> 00:08:21
Pause the video. Try this exercise and then resume the video.

69
00:08:22 --> 00:08:28
From the <b>email</b><i> underscore </i><b>str</b>, change the separator to <b>semicolon</b> instead of <b>comma</b>.

70
00:08:29 --> 00:08:32
Switch back to <b>terminal</b> for the solution.

71
00:08:33 --> 00:08:42
Type as shown. We see that the email addresses are joined by a semicolon followed by a space.

72
00:08:43 --> 00:08:48
This brings us to the end of this tutorial. Let us summarize.

73
00:08:49 --> 00:08:57
In this tutorial, we have learnt to,
<p>Obtain <b>substrings</b>
</p><p>Reverse <b>strings</b> by using the index numbers
</p>

74
00:08:58 --> 00:09:04
Use the following methods
<p><b>upper()</b>
</p><p><b>lower()</b>
</p><p><b>replace() </b>and
</p><p><b>join()</b>
</p>

75
00:09:05 --> 00:09:24
Here are some self assessment questions for you to solve
<p>1. Given a string <b>s = "this was a string‚Äù</b>, how will you change it to "<b>this wasn't a list</b>"? 
</p><p>2. The string <b>s</b> is assigned as shown, change the string to "<b>friends</b>"
</p>

76
00:09:25 --> 00:09:38
And the answers,
<p>1. We will use the <b>replace</b> <b>method</b> to accomplish this.
</p><p>Here <b>string</b> and <b>was</b> in the statement will be replaced by <b>list</b> and <b>wasn't </b>respectively.
</p>

77
00:09:39 --> 00:09:44
2. In order to remove dots and to get <b>substring </b>we <b>stride </b>the <b>string s</b>.

78
00:09:45 --> 00:09:50
To change the <b>string</b> to <b>lowercase</b>, we use the <b>string method lower().</b>

79
00:09:51 --> 00:09:54
Please post your timed queries in this forum.

80
00:09:55 --> 00:09:59
Please post your general queries on Python in this forum.

81
00:10:00 --> 00:10:03
FOSSEE team coordinates the TBC project. (16.45)

82
00:10:04 --> 00:10:13
Spoken Tutorial Project is funded by NMEICT, MHRD, Govt. of India. For more details, visit this website.

83
00:10:14 --> 00:10:19
This is Priya from IIT Bombay signing off. Thanks for joining.

