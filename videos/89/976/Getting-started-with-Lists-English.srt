<b>Narration</b>

1
00:00:01 --> 00:00:06
Hello Friends. Welcome to the tutorial on "<b>Getting started with lists</b>".

2
00:00:07 --> 00:00:20
At the end of this tutorial, you will be able to,
<p>Create <b>lists </b>
</p><p>Access <b>list elements </b>
</p><p><b>Append elements</b> to <b>lists</b> and
</p><p><b>Delete elements</b> from <b>lists </b>
</p>

3
00:00:21 --> 00:00:34
To record this tutorial, I am using
<p><b>Ubuntu Linux 14.04</b> operating system
</p><p><b>Python 3.4.3</b>
</p><p><b>IPython 5.1.0</b>
</p>

4
00:00:35 --> 00:00:47
To practise this tutorial, you should know how to
<p>run basic <b>Python </b>commands on the <b>ipython console</b>
</p><p>If not, see the relevant <b>Python </b>tutorials on this website.
</p>

5
00:00:48 --> 00:00:58
What is a List?
<p>A List can store a sequence of elements.
</p><p>All elements need not be of the same data types
</p>

6
00:00:59 --> 00:01:05
Let us open the <b>Terminal </b>by pressing <b>Ctrl+Alt+T </b>keys simultaneously

7
00:01:06 --> 00:01:19
Now, type <b>ipython3</b> and press <b>Enter</b>. We are now in the <b>ipython</b> prompt.
<p>Let us clear the <b>terminal</b> by pressing <b>Ctrl + L</b> for better view.
</p>

8
00:01:20 --> 00:01:24
Let us define a <b>list</b> with a variable name <b>mylist</b>

9
00:01:25 --> 00:01:44
Type
<p><b>mylist </b><i>equal to</i> <i>inside square brackets inside quotes</i><b> spam </b><i>comma</i><b> </b><i>inside quotes </i><b>eggs</b> <i>comma<b> </b></i><b>hundred </b><i>comma</i><b> one point two three four </b>and<b> </b>press <b>Enter</b>. 
</p>

10
00:01:45 --> 00:01:51
In <b>Python, strings</b> are always placed inside single or double quotes.

11
00:01:52 --> 00:02:00
Now enter<b> type </b>within brackets <b>mylist </b>and<i> </i>press <b>Enter</b>.

12
00:02:01 --> 00:02:09
Here <b>type</b> is a <b>function</b> which will return the <b>datatype</b> of the variable.
<p><b>mylist</b> is a <b>list datatype</b>. 
</p>

13
00:02:10 --> 00:02:26
As we can see, <b>lists</b> can contain <b>elements</b> of different <b>datatypes</b>
<p>In <b>mylist</b>, <b>spam</b> and <b>eggs</b> are <b>strings</b>,  whereas <b>hundred</b> and<b> one point two three four</b> are <b>integer</b> and <b>float</b> respectively. 
</p>

14
00:02:27 --> 00:02:31
In the code typed earlier, the name <b>mylist</b> is a variable.

15
00:02:32 --> 00:02:38
In <b>Python</b>, a variable must either start with an alphabet or an <b>underscore</b>.

16
00:02:39 --> 00:02:44
They cannot start with numbers and cannot be the same as <b>Python keywords.</b>

17
00:02:45 --> 00:02:48
You will learn about <b>keywords</b> as we proceed.

18
00:02:49 --> 00:02:59
Few examples of keywords are <b>“for, if, else, elif, while, in, def, or, and”.</b>

19
00:03:00 --> 00:03:06
A variable name cannot have spaces or punctuation characters or any arithmetic characters.

20
00:03:07 --> 00:03:13
These are some of the valid and invalid variable names.

21
00:03:14 --> 00:03:31
Getting back to our <b>lists</b>, the <b>list</b> could be created as <b>num <i>underscore </i>list is <i>equal to</i></b><i> inside square brackets '''</i><b>one</b> <i>comma </i><b>two'</b><i> and press<b> Enter</b></i>
<p>or
</p>

22
00:03:32 --> 00:03:49
<b>x </b><i>equal to inside square brackets inside quotes </i><b>a</b><i> comma inside quotes </i><b>b</b><i> </i>and press<b> Enter</b>
<p>Any valid variable name could be used.
</p>

23
00:03:50 --> 00:03:54
Let us now create an <b>empty list </b>with no elements.

24
00:03:55 --> 00:04:07
Type <b>myemptylist </b><i>is equal to open and close square brackets </i>and press <b>Enter</b>.
<p>This is an <b>empty list</b> without any <b>element</b>
</p>

25
00:04:08 --> 00:04:14
We can access an <b>element</b> of a <b>list</b> using its corresponding <b>index</b> or <b>position</b>.

26
00:04:15 --> 00:04:21
<b>Index value</b> of the <b>elements</b> starts from 0, 1, 2 and so on.

27
00:04:22 --> 00:04:32
<b>Negative indices</b> are used to access <b>elements</b> from the end. Which starts from -1, -2, and so on

28
00:04:33 --> 00:04:43
The syntax to get a specific <b>list element</b> is
<p><b>variable </b><i>inside square brackets </i><b>elements index value</b>
</p>

29
00:04:44 --> 00:04:46
Switch to the <b>terminal</b>.

30
00:04:47 --> 00:04:59
Type <b>mylist<i> </i></b><i>inside square brackets<b> </b></i><b>zero </b>and press <b>Enter</b>.
<p>As we can see<b> mylist[0]</b> gives the first <b>element spam</b>
</p>

31
00:05:00 --> 00:05:10
Type <b>mylist </b><i>inside square brackets<b> </b></i><b>one </b>and press <b>Enter</b>.
<p><b>mylist[1] </b>gives the second <b>element</b>.
</p>

32
00:05:11 --> 00:05:20
Pause the video. Try this exercise and then resume the video.
<p>What happens when you type <b>mylist[-1]</b>. 
</p>

33
00:05:21 --> 00:05:24
Switch to the <b>terminal</b> for solution

34
00:05:25 --> 00:05:38
Type <b>mylist </b><i>inside square brackets </i><b>minus one</b><i> </i>and<b> </b>press <b>Enter</b>.
<p>As you can see you get the last <b>element</b> which is <b>one point two three four. </b>
</p>

35
00:05:39 --> 00:05:42
We can also create a <b>list</b> inside a <b>list.</b>

36
00:05:43 --> 00:05:52
This property makes <b>lists heterogeneous data structures</b>.  This is the syntax for <b>list</b> inside a <b>list</b>.

37
00:05:53 --> 00:05:58
Let us include a <b>list</b> within a <b>list</b> for the variable <b>doublelist</b>.

38
00:05:59 --> 00:06:10
Type the code as shown here: Here <b>b c d</b> is a <b>list</b> in <b>list</b> which is represented within square brackets inside a <b>list</b>.

39
00:06:11 --> 00:06:22
Now let us fetch some element from <b>doublelist</b>.
<p>Type:<b> doublelist </b><i>inside square brackets </i><b>one</b> and press <b>Enter</b>
</p>

40
00:06:23 --> 00:06:36
We can see the output as <b>b c d </b>within square brackets. This is because the <b>index value one</b> contains the <b>list</b> inside a <b>list</b> as its <b>element</b>.

41
00:06:37 --> 00:06:44
Now let us try to access a specific <b>element</b>, say<b> b</b> from the <b>list</b> inside a <b>list</b>.

42
00:06:45 --> 00:06:56
For this type: <b>doublelist</b><i> inside square brackets </i>one <i>inside square brackets </i><b>zero </b>and press <b>Enter</b>.

43
00:06:57 --> 00:07:03
Here the 1st <b>parameter</b> represents the <b>index</b> of the <b>list</b> in the main <b>list</b>.

44
00:07:04 --> 00:07:11
The second <b>parameter</b> represents the <b>index value</b> of <b>b</b> in the <b>list</b> inside the <b>list</b>.

45
00:07:12 --> 00:07:17
Pause the video. Try this exercise and then resume the video.
<p><b>doublelist=[‘a’, [‘b’,’c’,’d’], 'and', 5, 6, 7, 8] </b>
</p>

46
00:07:18 --> 00:07:23
What is the command to get the <b>element 'and'</b> in the <b>list <i>doublelist</i></b>?

47
00:07:24 --> 00:07:27
How would you get '<b>and'</b> using negative <b>indices</b>?

48
00:07:28 --> 00:07:32
How would you get <b>element 'd'</b> from the <b>list <i>doublelist</i></b>?

49
00:07:33 --> 00:07:37
The solution is on your screen.

50
00:07:38 --> 00:07:48
We can use <b>len function</b> to check the number of <b>elements/length of </b>in the <b>list</b>.
<p>The syntax is: <b>len</b> <i>inside parentheses </i><b>variable</b>
</p>

51
00:07:49 --> 00:07:54
Let us find the number of elements in <b>mylist</b> which we created earlier.

52
00:07:55 --> 00:08:04
Switch to the<b> terminal </b>and clear the screen. Recall <b>mylist</b> by pressing up arrow key and press<b> Enter.</b>

53
00:08:05 --> 00:08:15
Type <b>len </b><i>inside parentheses </i><b>mylist </b>and press <b>Enter.</b> We get the length of <b>mylist</b> as <b>four</b>.

54
00:08:16 --> 00:08:20
We can append <b>elements</b> to the <b>list</b> using the <b>append function</b>.

55
00:08:21 --> 00:08:25
This <b>function</b> will add the <b>element</b> to the end of the <b>list</b>.

56
00:08:26 --> 00:08:34
The syntax is: <b>variable</b> <i>dot</i> <b>append</b> within <i>parentheses <b>element</b> to be added.</i>

57
00:08:35 --> 00:08:48
Switch to the <b>terminal</b>
<p>Now type 
</p><p><b>mylist</b><i> dot</i> <b>append</b> <i>inside parentheses within quotes<b> </b></i><b>sharp</b> and<b> </b>press <b>Enter</b>. 
</p>

58
00:08:49 --> 00:08:56
Type<b> mylist </b><i>dot</i> <b>append</b> <i>inside parentheses<b> </b></i><b>six<i> </i></b>and<b> </b>press <b>Enter.</b>

59
00:08:57 --> 00:09:09
Let us check the <b>updated mylist.</b> Type<b> mylist </b>and press <b>Enter </b> We can see <b>mylist</b> is <b>appended</b> with <b>sharp</b> and <b>six</b> at the end.

60
00:09:10 --> 00:09:28
We can also remove <b>elements</b> from <b>lists</b>.
<p>There are two ways of doing it. One is by using the <b>index </b>with<b> del keyword</b>. 
</p><p>Syntax is <b>del </b>variable <i>inside square brackets <b>element’s </b></i><b>index value</b>.
</p>

61
00:09:29 --> 00:09:42
The other way is removing <b>element</b> by the value using <b>remove function</b>
<p>Syntax is <b>variable </b><i>dot </i><b>remove </b><i>inside parentheses </i><b>element to be removed</b>
</p>

62
00:09:43 --> 00:10:00
Switch to the<b> terminal.</b>
<p>Type <b>mylist</b> and press<b> Enter </b>to see the updated <b>list</b>.
</p><p>Type <b>del </b><i>space </i><b>mylist </b><i>inside square brackets</i><b> one </b>and press <b>Enter.</b>
</p>

63
00:10:01 --> 00:10:10
The <b>keyword del</b> deletes the <b>element</b> at <b>index</b> one, i.e the second <b>element</b> of the <b>list, eggs</b>.

64
00:10:11 --> 00:10:21
Again type <b>mylist</b> and press<b> Enter</b>. We can see that the <b>element eggs</b> has been deleted from the <b>list</b>.

65
00:10:22 --> 00:10:26
Let us delete the <b>element hundred</b> from <b>mylist list</b>.

66
00:10:27 --> 00:10:43
For this we can use the <b>function remove</b>. Type <b>mylist</b><i> dot </i><b>remove </b>within parentheses<b> hundred </b>and press <b>Enter.</b>
<p>Let us check the <b>updated mylist.</b>
</p>

67
00:10:44 --> 00:10:46
What if the <b>elements</b> are repeated?

68
00:10:47 --> 00:11:00
To check that, let’s do a small experiment.Type  <b>mylist</b><i> dot </i><b>append </b>within parentheses within quotes <b>spam </b>and press<b> Enter</b>

69
00:11:01 --> 00:11:07
Type <b>mylist </b>and press<b> Enter</b> Here is the <b>updated mylist.</b>

70
00:11:08 --> 00:11:16
It contains the <b>element spam</b> twice. One is at the start and the next is at the end of the <b>list</b>.

71
00:11:17 --> 00:11:34
Now remove the <b>element spam</b> by typing: <b>mylist </b><i>dot </i><b>remove </b><i>inside parentheses inside quotes</i> <b>spam </b>and press <b>Enter.</b>
<p>Let us check <b>updated mylist.</b>
</p>

72
00:11:35 --> 00:11:40
We can see that only the first occurrence of '<b>spam'</b> has been removed.

73
00:11:41 --> 00:11:56
The <b>function remove</b> removes the first occurrence of the <b>element</b> in the sequence.
<p>Remember, the <b>del keyword</b> removes the <b>element</b> by <b>index value</b>. <b>remove function</b> removes on the basis of <b>element</b> being passed on. 
</p>

74
00:11:57 --> 00:12:02
Using <b>remove function</b>, we can also remove an <b>element</b> with its <b>index value</b>.

75
00:12:03 --> 00:12:16
Let us try this with an example. Type<b> k </b><i>is equal to inside square brackets </i><b>one</b><i> comma </i><b>two</b><i> comma </i><b>one</b><i> comma </i><b>three </b>and press<b> Enter</b>

76
00:12:17 --> 00:12:35
Then type <b>k </b><i>dot <b>remove</b> inside parentheses</i><b> k inside square brackets two </b>and press<b> Enter</b> Type<b> k </b>and press <b>Enter </b> We can see the output as<b>[2,1,3].</b>

77
00:12:36 --> 00:12:44
Since it <b>deletes</b> the first occurrence of what is returned by <b>k </b><i>inside square brackets</i><b> two</b> which is<b> one</b>.

78
00:12:45 --> 00:12:57
Pause the video. Try this exercise and then resume the video.
<p>1. Delete the fourth <b>element</b> from the <b>list doublelist</b>.
</p><p>2. Remove '<b>and'</b> from the <b>list doublelist</b>. 
</p>

79
00:12:58 --> 00:13:03
The solution is on your screen.

80
00:13:04 --> 00:13:17
This brings us to the end of this tutorial.
<p>In this tutorial, we have learnt to create:
</p><p><b>List</b> with <b>elements</b>
</p><p><b>Empty list</b>
</p><p><b>List</b> within a <b>list</b>
</p>

81
00:13:18 --> 00:13:27
We also learnt to,
<p>Find out the <b>list</b> length using <b>len function</b>.
</p><p>Access <b>elements</b> using their <b>index</b> numbers. 
</p>

82
00:13:28 --> 00:13:36
Append <b>elements</b> to <b>list</b> using the <b>function append</b>.
<p>Delete <b>element</b> from list using the <b>del</b> and <b>remove function</b>
</p>

83
00:13:37 --> 00:13:53
Here are some self assessment questions for you to solve
<p>How do you create an <b>empty list</b>? 
</p><p>Can you have a <b>list</b> inside a <b>list</b>? 
</p><p>How would you access the last <b>element</b> of a <b>list</b> without finding its length? 
</p>

84
00:13:54 --> 00:14:06
And the answers,
<p>1. We create an <b>empty list</b> just by leaving the space inside the square brackets empty. <b>myemptylist</b> equal to open and close square brackets.
</p>

85
00:14:07 --> 00:14:18
2. Yes, <b>list</b> can contain all the other <b>data types</b>, including <b>list</b>.
<p>3. Using negative <b>indices</b>, we can access the last <b>element</b> from the <b>list</b>.
</p>

86
00:14:19 --> 00:14:22
Please post your timed queries in this forum.

87
00:14:23 --> 00:14:27
Please post your general queries on Python in this forum.

88
00:14:28 --> 00:14:32
FOSSEE team coordinates the TBC project.

89
00:14:33 --> 00:14:43
Spoken-tutorial is funded by NMEICT, MHRD, Govt. of India. For more details, visit this website.

90
00:14:44 --> 00:14:49
This is Trupti Kini from IIT Bombay signing off. Thank you.

